{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"2021-05-25-datatype복습.ipynb의 사본","private_outputs":true,"provenance":[{"file_id":"1vldvHtlau8-_RByxLpMbd2LwXNJiNzGO","timestamp":1621937652539}],"authorship_tag":"ABX9TyPdd4GKBB4dbjM5YWF6jwNh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"FMTRjKQd7Wk3"},"source":["#**데이터 이해하기**\n","\n","* 정보 (information)을 얻기 위한 재료  \n","* 데이터 혹은 자료라고 이야기하며 구체적으로 이야기 할 때는 값(value) 라고 한다.   \n","        신체검사시 키,몸무게,시력 등의 구체적인 특성이 value  \n","        이 값을 모아 '2021년 신체검사 결과'로 만들면 data  \n","        신장을 체중으로 나누어 비만도 위험군을 선별하면 information\n"]},{"cell_type":"markdown","metadata":{"id":"iPbrYMJ_AoDI"},"source":["###variable   \n","\n","* 변수 - 값을 저장하는 공간   \n","* 변수명 - 값을 저장하는 공간의 이름"]},{"cell_type":"markdown","metadata":{"id":"A7IOZBPCbEyQ"},"source":["###변수와 관계된 주요 작업 \n","*   변수를 생성(declaration)해 값 저장하기(assignment)\n","*   변수를 호출해(call)하고 값 참조(reference) "]},{"cell_type":"code","metadata":{"id":"-sve5h3OCS46"},"source":["cal_test = 10*10+10/10 # 계산값을 변수명 cal_text에 저장, 변수 생성과 값저장을 동시에 수행\n","print(cal_test) #변수 num1을 호출해 참조하여 출력"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_3ASUDYEbF22"},"source":["###변수명 객체 이름 정하기 기준\n","객체 - 파이썬을 구성하는 모든 요소  \n","*   알파벳,숫자,공백을 표현하기 위한 _\n","*   객체명은 첫문자로 숫자를 사용할 수 없다\n","*   혼동하기 쉬운 문자 변수는 사용하지 않는것이 좋다.   \n","            'l'(소문자 엘),I(대문자 아이), O(대문자 오),o(소문자 오) 등\n","*   파이썬이 사용하는 객체명(키워드)는 사용할 수 없다\n","\n","        'False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class',    \n","        'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for','from',    \n","        'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or','pass',   \n","        'raise', 'return', 'try', 'while', 'with', 'yield'"]},{"cell_type":"markdown","metadata":{"id":"3bgrxcPLQk5z"},"source":["###**파이썬 표준 작명 기준**\n","\n","*   snake_case: 모든 단어를 소문자로 구성하고 단어 사이를 _로 구분  \n","*   CamelCase: 단어의 첫 문자를 대문자로 나머지는 소문자로 공백없이 \n","*   mixedCase: CamelCase와 같으나 객체명 첫글자는 소문자 사용\n","\n","https://www.python.org/dev/peps/pep-0008/#id34\n"]},{"cell_type":"markdown","metadata":{"id":"sj32j0cxAJol"},"source":["###**data type**\n","값들의 특성에 따른 분류\n","8가지의 기본 data type를 학습합니다.  \n","1.   숫자형(정수,실수)\n","2.   문자열\n","3.   bool : 판단의 결과 참, 거짓\n","4.   튜플 \n","5.   리스트\n","6.   집합\n","7.   딕션너리\n","8.   형변환 \n"]},{"cell_type":"markdown","metadata":{"id":"LrWygEW8eFWw"},"source":["### 1.숫자형"]},{"cell_type":"markdown","metadata":{"id":"USWZtiWKeLmD"},"source":["정수: 소숫점이 없는 숫자.자료형명 int   \n","실수: 소숫점이 있는 숫자. 자료형명 float"]},{"cell_type":"code","metadata":{"id":"Y87qQKj2esZG"},"source":["a = 1\n","b = 1.0\n","c = 00.00310\n","d = .554\n","e = 15.\n","print(a,b,c,d,e,sep='   ')\n","print(a*b,c/d,(e-3)*d,sep='   ')\n","\n","# 실수값에 영향이 없는 0은 제거된다.\n","# 산술연산자 +,-,*,/ 사용 가능\n","# 나눗셈을 제외한 정수간 계산의 결과값은 정수,정수와 실수 간 계산값은 실수"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zAC_BCfhfhRh"},"source":["type_list = [a,b,c,d,e]\n","\n","for i in range(5):\n","    print(type(type_list[i]),type_list[i])\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1HN8N-WmiXsB"},"source":["#####산술연산자\n","\n","*  사칙연산자 +, -, * \n","*  제곱을 나타내는 **  \n","*  나머지를 산출하는 % (Modulus),   \n","*  나누기에 소숫점 이하를 버리는 // 연산자(Floor Division) \n"]},{"cell_type":"markdown","metadata":{"id":"xRiEYqwVh-QS"},"source":["#####비교연산자\n","* 관계연산자로도 불리운다\n","* 등호(==), 같지 않음(!=), 부등호(<, >, <=, >=) 등이 있다.\n"]},{"cell_type":"code","metadata":{"id":"GmUQfMFflVxV"},"source":["#제자리 연산:변수에서 값을 꺼낸 연산 후 그 결과를 원래의 변수에 다시 저장 \n","num1 = 100\n","num1 = num1 + 100\n","num1 += 100 \n","print(num1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IxCm2x32p7Cm"},"source":["# 제자리 연산자\n","num2 = 100\n","num3 = 200\n","num2 += num3   # num2 = num2 + num3\n","print(num2)\n","num2 -= num3   # num2 = num2 - num3\n","print(num2)\n","num2 *= num3   # num2 = num2 * num3\n","print(num2)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"KD9zxVOCrcVQ"},"source":["###**2.문자열**"]},{"cell_type":"markdown","metadata":{"id":"MfFGUv49ry5e"},"source":["#####문자열은 텍스트의 기본 자료형\n","\n","문자를 사슬(string)처럼 나영한 값, 자료형명 str\n","\n","변수명이나 함수명과 구분하기 위해 따옴표로 열고 닫아 생성합니다."]},{"cell_type":"markdown","metadata":{"id":"IrFKDFTpsH2e"},"source":["#####문자열 내의 특수키\n","    \n","    \\'   => '\n","    \\\"   => \"\n","    \\\\   => \\\n","    \\n   => 줄바꿈(newline), enter\n","    \\t   => 줄맞춤(intent),tap"]},{"cell_type":"code","metadata":{"id":"Pbz3W2wAtlKH"},"source":["print( '셀 병합 \\n \\t \\'shift key\\'를 누른후 \\n \\t \\t병합을 원하는 셀들을 다중선택 후 shift+M')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"01oxBTthu5FO"},"source":["# '''로 문자열을 열고 닫을때\n","# \\n없이 enter로 줄바꿈,\\',\\\"없이 따옴표 사용 가능\n","print('''{\n","    마크다운 전환: ctrl + m m \n","    코드로 전환: ctrl + m y \n","    \" 사용 가능  \" '  '\n","}''')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"g7IgOge2vyvY"},"source":["#문자열로서의 숫자처리\n","#주민번호,우편번호등 값이 0으로 시작되는 정수 \n","#파이썬에서는 정수가 0으로 시작하면 정수값 입력오류로 문법 오류 처리 \n","print(06002)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"baGaYD0ixH9h"},"source":["#주민번호 예\n","print(210101-1111111)\n","print('210101-1111111')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"h45hOkEMeMI6"},"source":["#####문자열에서 사용되는 함수\n","* join : 문자열을 원하는 글자로 더한다.\n","* split : 문자열을 원하는 글자로 나눈다.\n","* strip : 문자열 앞뒤의 공백을 지운다. 문자열 내부의 공백은 지우지 않는다.\n","* replace : 문자열의 특정 글자를 다른 글자로 바꾼다.\n","* in : 문자열 안에 해당 글자가 있는지 확인\n","* not in : 문자열 안에 해당 글자가 없는지 확인 \n","* count : 특정 글자가 문자열에 몇번 사용되었는지 확인 \n","* find : 문자열에서 특정 글자의 위치정보 확인\n","* capitalize : 문자열의 첫 글자를 대문자로 변환\n","* lower : 모든 글자를 소문자로 변환\n","* upper: 모든 글자를 대문자로 변환\n","* starstwith : 해당 문자열이 특정 글자로 시작되는지 확인\n","* endswith : 해당 문자열이 특정 글자로 끝나늕 확인\n"]},{"cell_type":"code","metadata":{"id":"CNbIRuL6eTmX"},"source":["print('-'.join('Hello World'))\n","\n","print('Welcome to python'.split(' '))\n","print('     welcome    to python world    '.strip())\n","print('welcome to python world'.replace('py','Py'))\n","text_1 = 'welcome to python world'\n","print('Py' in text_1)\n","print('Py' not in text_1)\n","print(text_1.count('w'))\n","print(text_1.find('py'))\n","print(text_1.index('p'))\n","print(text_1.capitalize())\n","print(text_1.lower())\n","print(text_1.upper())\n","print(text_1.startswith('hello'))\n","print(text_1.endswith('world'))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uEuhMA4cw2X3"},"source":["###**3.bool**"]},{"cell_type":"markdown","metadata":{"id":"2APyLxGoxo1n"},"source":["주어진 조건 안에서 참,거짓을 판단해서 결과를 담는 자료형\n","값 True,False"]},{"cell_type":"code","metadata":{"id":"9kD_kaBZx-bc"},"source":["a = 8 == 12\n","print(a,type(a))\n","b = 'apple' == 'APPLE'\n","print(b,type(b))\n","c = 8 != 12\n","print(c,type(c))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"PsZR3bH81j5I"},"source":["#####논리연산자\n","\n","* 조건식과 조건식을 연결하는 연산자 \n","        논리합 => a and b : a나 b 모두 참일때만 참 \n","        논리곱 => a or b : a나 b 중 하나만 참이어도 참\n","        부정   => not a : a가 참이면 거짓,거짓이면 참\n"]},{"cell_type":"code","metadata":{"id":"wHcSsreC2QPq"},"source":["a =  10 < 11 #True\n","b =  10 > 11 #False\n","print( a and a) # True and True\n","print( a and b) # True and False\n","print( b and b) # False and False \n","print( a or b) # True or False \n","print( not a ) # not True\n","print( not a or (a or b)) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ze2V7m7d4lt_"},"source":["#컴퓨터는 True는 1,False 는 0과 동일하게 이해\n","print(True + False)"],"execution_count":null,"outputs":[]}]}